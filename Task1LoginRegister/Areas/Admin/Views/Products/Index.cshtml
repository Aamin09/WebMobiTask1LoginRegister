@model IEnumerable<Task1LoginRegister.Models.Product>

@{
    ViewData["Title"] = "Product List";
}
<style>
    .product-image{
    max-width: 100px;
    height:auto;
    max-height:130px;
    }
</style>

<h1 class="text-center mb-4">Product List</h1>

<div class="alert alert-dark text-center">
    <h5 class="mb-3">Want to manage Categories?</h5>
    <a asp-action="Index" asp-controller="CategorySubcategory" class="btn btn-dark text-white btn-md"><i class="fas fa-box-open"></i> Go to Category and Subcategory Dashboard</a>
</div>

<div class="card shadow mb-4">
    <div class="card-body">
        <div class="row align-items-center">
            <div class="col-lg-3 col-md-6 mb-3 mb-lg-1">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-primary rounded p-2 text-white">
                            <i class="fas fa-shopping-bag fa-2x"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="text-muted mb-0">Total Products</h6>
                        <h4 class="mb-0">@(Model.Any() ? Model.Select(p => p.ProductId).Count().ToString() : 0)</h4>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3 mb-lg-1">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-success rounded p-2 text-white">
                            <i class="fas fa-inr fa-2x"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="text-muted mb-0">Total Revenue</h6>
                        <h4 class="mb-0">@Model.Sum(p=>p.OrderItems.Sum(oi=>oi.Quantity * oi.SnapshotPrice)).ToString("N2")</h4>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3 mb-lg-1">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="rounded p-2 text-dark" style="background-color: #FFD700;">
                            <i class="fas fa-crown text-dark fa-2x"></i>
                        </div>



                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="text-muted mb-0">Most Selling Product</h6>
                        @{
                            var mostSellingProduct = Model
                            .OrderByDescending(p => p.OrderItems.Sum(oi => oi.Quantity))
                            .FirstOrDefault();
                            var nosales = Model.OrderByDescending(p => p.OrderItems.Sum(oi => oi.Quantity)).Count();
                        }

                        @if (mostSellingProduct != null)
                        {
                            <h6 class="mb-0">@mostSellingProduct.Name </h6>
                            <h6 class="mb-0">No. of sales: @nosales </h6>
                        }
                        else
                        {
                            <h6 class="mb-0">No Sales Yet</h6>
                        }

                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6 mb-3 mb-lg-1">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-success rounded p-2 text-white">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="text-muted mb-0">Total Delivered</h6>
                        <h4 class="mb-0">@(Model.Any() ? Model.Sum(p => p.OrderItems.Count(oi => oi.Order.OrderStatus == "Delivered")).ToString() : "0")</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<p class="text-right mt-2">
    <a asp-action="Create" class="btn btn-primary btn-md"><i class="fas fa-plus-circle"></i> Create New Product</a>
</p>

<div class="table-responsive">
    <table class="table table-striped table-bordered" id="productsTable">
        <thead class="bg-black text-white">
            <tr>
                <th>Image</th>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.SKU)</th>
                <th>@Html.DisplayNameFor(model => model.CostPrice) (<i class="fas fa-inr"></i>)</th>
                <th>@Html.DisplayNameFor(model => model.CalculatedSellingPrice) (<i class="fas fa-inr"></i>)</th>
                <th>@Html.DisplayNameFor(model => model.Category)</th>
                <th>@Html.DisplayNameFor(model => model.Subcategory)</th>
                <th>@Html.DisplayNameFor(model => model.StockQuantity)</th>
                <th>@Html.DisplayNameFor(model => model.Status)</th>

                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <!-- Display the Primary Image -->
                    <td>
                        <partial name="_ProductImageVideoPartialView" model="@item" />
                    </td>


                   
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.SKU)</td>
                    <td class="border p-2">@item.CostPrice.ToString("N2")</td>
                    <td class="border p-2">@item.Price.ToString("N2")</td>
                    <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Subcategory.Name)</td>
                    <td>@Html.DisplayFor(modelItem=>item.StockQuantity)</td>
                    <td>
                        <button class="btn @(item.Status ? "btn-success" : "btn-danger") btn-sm toggle-status" data-id="@item.ProductId">
                            @(item.Status ? "Active" : "InActive")
                        </button>
                    </td>
                    
                    <td>
                        <div style="width: 100%;">
                            <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-warning btn-sm w-100 mb-2" title="Edit Product">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </div>
                        <div style="width: 100%;">
                            <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-info btn-sm w-100 mb-2" title="View Product Details">
                                <i class="fas fa-info-circle"></i> Details
                            </a>
                        </div>
                        <div style="width: 100%;">
                            <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-danger btn-sm w-100" onclick="return confirm('Are you sure you want to delete this product?')" title="Delete Product">
                                <i class="fas fa-trash-alt"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
   
    <script>
         $(document).ready(function () {
            $("#productsTable").DataTable({
                responsive: true,
             
            });
        });

        $(document).on("click", ".toggle-status", function () {
            var button = $(this);
            var ProductId = button.data("id");

            $.ajax({
                type: "Post",
                url: "@Url.Action("ToggleStatus", "Products")",
                data: { id: ProductId },
                success: function (data) {
                    if (data.isActive) {
                        button.removeClass("btn-danger").addClass("btn-success").text("Active");
                    } else {
                        button.removeClass("btn-success").addClass("btn-danger").text("InActive");
                    }
                }
            });
        });

    </script>
}
