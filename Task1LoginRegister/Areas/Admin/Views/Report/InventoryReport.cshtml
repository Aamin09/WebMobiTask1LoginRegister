@model Task1LoginRegister.DTOs.InventoryReportMainViewModel
@{
    ViewData["Title"] = "InventoryReport";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var startDate = ViewBag.StartDate ?? DateTime.Now.AddDays(-30).ToString("yyyy-MM-dd");
    var endDate = ViewBag.EndDate ?? DateTime.Now.ToString("yyyy-MM-dd");

}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-warehouse  me-1"></i> Inventory Report</h2>
                <div class="btn-group">
                    <a asp-action="Index" asp-controller="Report" class="btn btn-sm btn-outline-secondary"><i class="fas fa-arrow-left"></i> Back to Report</a>
                    <a asp-action="ExportInventoryReport" asp-controller="Report" asp-route-startDate="@startDate" asp-route-endDate="@endDate" class="btn btn-sm btn-outline-success"><i class="fas fa-file-export"></i> Export Report</a>
                </div>
            </div>
            <!-- date filters -->

            <partial name="_DateApplyFilters" />

            <div class="row g-4 mb-4">
                <div class="col-xl-3 col-md-6">
                    <div class="card border-primary border-start border-4 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <div class="text-xs text-primary text-uppercase mb-1">
                                        Total Products
                                    </div>
                                    <div class="h5 mb-0 fw-bold">@Model.TotalProductCount</div>
                                </div>
                                <div class="flex-shrink-0 ms-3">
                                    <i class="fas fa-shopping-cart fa-2x text-primary-emphasis"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-danger border-start border-4 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <div class="text-xs text-danger text-uppercase mb-1">
                                        Low Stock Products
                                    </div>
                                    <div class="h5 mb-0 fw-bold">@Model.LowStockProductCount</div>
                                </div>
                                <div class="flex-shrink-0 ms-3">
                                    <i class="fas fa-exclamation-triangle fa-2x text-danger text-danger-emphasis"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-info border-start border-4 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <div class="text-xs text-info text-uppercase mb-1">
                                        Total Stocks
                                    </div>
                                    <div class="h5 mb-0 fw-bold">@Model.Products.Sum(p => p.StockQuantity)</div>
                                </div>
                                <div class="flex-shrink-0 ms-3">
                                    <i class="fas fa-cubes fa-2x text-info-emphasis"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3 col-md-6">
                    <div class="card border-warning border-start border-4 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <div class="text-xs text-warning text-uppercase mb-1">
                                        Total Sold Stock
                                    </div>
                                    <div class="h5 mb-0 fw-bold">@Model.Products.Sum(p => p.TotalSales)</div>
                                </div>
                                <div class="flex-shrink-0 ms-3">
                                    <i class="fas fa-chart-line fa-2x text-warning-emphasis"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 fw-bold text-primary">Inventory Overview</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area d-flex justify-content-center">
                        <canvas id="inventoryChart" height="150"></canvas>
                    </div>
                </div>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 fw-bold text-primary">Stock Status Overview</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area" style="height:250px">
                        <canvas id="stockStatusChart" ></canvas>
                    </div>
                </div>
            </div>


            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Detailed Inventory</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped table-hover" id="productTable" width="100%" cellspacing="0">
                            <thead class="bg-primary text-white">
                                <tr>
                                    <th>Product Name</th>
                                    <th>SKU</th>
                                    <th>Category</th>
                                    <th>Subcategory</th>
                                    <th>Stock Quantity</th>
                                    <th>Minimum Stock Level</th>
                                    <th>Price (₹)</th>
                                    <th>Selling Price (₹)</th>
                                    <th>Total Sold</th>
                                    <th>Status</th>
                                    <th>Value Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var product in Model.Products)
                                {
                                    <tr class="@(product.ValueStatus == "Low Stock" ? "table-danger" : "")">
                                        <td>@product.ProductName</td>
                                        <td>@product.SKU</td>
                                        <td>@product.Category</td>
                                        <td>@product.Subcategory</td>
                                        <td>@product.StockQuantity</td>
                                        <td>@product.MinimumStockLevel</td>
                                        <td>@product.Price.ToString("N2")</td>
                                        <td>@product.SellingPrice.ToString("N2")</td>
                                        <td>@product.TotalSales</td>
                                        <td>@(product.Status ? "Active" : "Inactive")</td>
                                        <td>@product.ValueStatus</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script>
        $(document).ready(function(){
            $("#productTable").DataTable();

            // Top 20 Products Chart
           var stockStatusCtx = document.getElementById('stockStatusChart').getContext('2d');
            new Chart(stockStatusCtx, {
                type: 'pie',
                data: {
                    labels: ['Low Stock', 'Adequate Stock'],
                    datasets: [{
                        data: [@Model.LowStockProductCount, @(Model.TotalProductCount - Model.LowStockProductCount)],
                        backgroundColor: ['#dc3545', '#198754'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                         datalabels: {
                        legend: { position: 'right' },
                         font: {
                                 weight: 'bold'
                             },
                             color: '#fff',
                      formatter: function(value, context) {
                                return value;
                            }
                         }
                    }
                },
                 plugins: [ChartDataLabels]
            });

            // Top Products Chart (simplified)
            var topProductsCtx = document.getElementById('inventoryChart').getContext('2d');
            new Chart(topProductsCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Products.OrderByDescending(p => p.StockQuantity).Take(20).Select(p => p.ProductName))),
                    datasets: [{
                        label: 'Stock Quantity',
                        data: @Html.Raw(Json.Serialize(Model.Products.OrderByDescending(p => p.StockQuantity).Take(20).Select(p => p.StockQuantity))),
                        backgroundColor: '#0d6efd'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            formatter: function(value) {
                                return value;
                            },
                             font: {
                                 weight: 'bold'
                             }
                        }
                    },
                    scales: { y: { beginAtZero: true } }
                },
                 plugins: [ChartDataLabels]
            });
        });
    </script>
}