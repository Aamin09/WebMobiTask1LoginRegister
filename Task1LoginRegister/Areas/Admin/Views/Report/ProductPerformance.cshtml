@model IEnumerable<Task1LoginRegister.DTOs.ProductPerformanceDto>
@{
    ViewData["Title"] = "ProductPerformance";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var startDate = ViewBag.StartDate ?? DateTime.Now.AddDays(-30).ToString("yyyy-MM-dd");
    var endDate = ViewBag.EndDate ?? DateTime.Now.ToString("yyyy-MM-dd");
}

<style>
    /* Ensure charts have proper dimensions for PDF export */
    canvas {
        max-width: 100% !important;
        height: auto !important;
    }
</style>

<div class="container p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-box me-2"></i> Product Performance</h2>
        <div>
            <a asp-action="Index" asp-controller="Report" class="btn btn-sm btn-outline-secondary"><i class="fas fa-arrow-left"></i> Back to Report</a>
            <a asp-action="ExportProductPerformaceReport" asp-controller="Report" asp-route-startDate="@startDate" asp-route-endDate="@endDate" class="btn btn-sm btn-outline-success"><i class="fas fa-file-export"></i> Export Report</a>
        </div>
    </div>
    <!-- date filters -->
    <partial name="_DateApplyFilters" />

    <div class="row mb-4">
        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="mb-0 fw-bold text-primary">Top Products by Revenue</h6>
                </div>
                <div class="card-body">
                    <canvas id="revenueChart" width="100%" height="60"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="mb-0 fw-bold text-primary">Top Products by Quantity Sold</h6>
                </div>
                <div class="card-body">
                    <canvas id="quantityChart" width="100%" height="60"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Product Performance Report</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive" >
                <table class="table table-bordered table-striped table-hover" id="productTable" width="100%" cellspacing="0">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th>Product Name</th>
                            <th>Quantity Sold</th>
                            <th>Total Revenue (₹)</th>
                            <th>Orders</th>
                            <th>Avg. Order Value (₹)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>@product.ProductName</td>
                                <td>@product.TotalQuantitySold</td>
                                <td class="text-end">@product.TotalRevenue.ToString("N2")</td>
                                <td>@product.OrderCount</td>
                                <td class="text-end">@product.AverageOrderValue.ToString("N2")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
    <script>
            $(document).ready(function () {

            $('#productTable').DataTable();

            // Prepare chart data
            var products = @Html.Raw(Json.Serialize(Model.Take(5).Select(p => p.ProductName).ToList()));
            var revenues = @Html.Raw(Json.Serialize(Model.Take(5).Select(p => p.TotalRevenue).ToList()));
            var quantities = @Html.Raw(Json.Serialize(Model.Take(5).Select(p => p.TotalQuantitySold).ToList()));

            // Revenue Chart
            new Chart(document.getElementById('revenueChart'), {
                type: 'bar',
                data: {
                    labels: products,
                    datasets: [{
                        label: 'Total Revenue',
                        data: revenues,
                        backgroundColor: '#0dcaf0'
                    }]
                },
                options: {
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            formatter: (value) => '₹' + value.toLocaleString(),
                             font: {
                                 weight: 'bold'
                             }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: (value) => '₹' + value.toLocaleString()
                            }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

            // Quantity Chart
            new Chart(document.getElementById('quantityChart'), {
                type: 'bar',
                data: {
                    labels: products,
                    datasets: [{
                        label: 'Total Quantity',
                        data: quantities,
                        backgroundColor: 'rgba(28, 200, 138, 0.8)'
                    }]
                },
                options: {
                    plugins: {
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                             font: {
                                 weight: 'bold'
                             }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });
        });

    </script>
}