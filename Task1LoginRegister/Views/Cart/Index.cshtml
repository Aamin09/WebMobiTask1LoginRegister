@model IEnumerable<Task1LoginRegister.Models.Cart>
@using System.Text.Json;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<style>
    .price-section {
    position: sticky;
    top: 20px;
    z-index: 100;
    }

    .main {
    padding-right: 20px;
    padding-left: 40px;
    }

    .product-image, .product-video {
    max-width: 100%;
    width: 100%;
    height: 180px;
    object-fit: cover;
    border: 2px solid #ddd;
    padding: 5px;
    border-radius: 10px;
    }

    .quantity {
    text-align: center;
    width: 65px;
    padding: 5px;
    font-size: 16px;
    outline: none;
    }

    .btn-outline-secondary {
    cursor: pointer;
    width: 40px;
    border: none;
    transition: background-color 0.2s, box-shadow 0.2s;
    }

    .btn-outline-secondary:focus {
    box-shadow: none;
    }


    .d-flex.border {
    border: 1px solid #dee2e6;
    border-radius: 8px;
    overflow: hidden;
    max-width: 100%;
    }

    input[type="number"] {
    border: none;
    text-align: center;
    font-size: 14px;
    }

    @@media screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {

    .main {
    padding: 10px;
    }

    .product-details p.small, .quantity-price {
    font-size: 16px;
    }

    .quantity {
    width: 55px;
    font-size: 15px;
    }

    .btn-outline-secondary {
    width: 40px;
    font-size: 15px;
    padding: 4px;
    }

    .quantity-price {
    font-size: 16px;
    }
    }

    @@media (max-width: 767px) {
    .main {
    padding: 10px;
    }

    h5 {
    font-size: large;
    }

    p {
    font-size: medium;
    }

    .product-details p.small {
    font-size: 12px;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
    }

    .quantity {
    width: 50px;
    font-size: 15px;
    }

    .btn-outline-secondary {
    width: 35px;
    font-size: 15px;
    padding: 4px;
    }

    .quantity-price {
    font-size: 16px;
    }
    }

    @@media (max-width: 576px) {
    .main {
    padding: 5px;
    }

    .col-lg-8, .col-lg-4 {
    padding: 5px;
    margin: 0;
    }

    .quantity {
    width: 40px;
    font-size: 14px;
    }

    .btn-outline-secondary {
    width: 25px;
    font-size: 12px;
    padding: 3px;
    }

    .product-details p.small {
    font-size: 14px;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
    }
    }
</style>


<div class="container-fluid main">
    <div class="row">

        <div class="col-lg-8">
            <h4 class="mb-3">My Cart (@Model.Count() Items)</h4>
            <div class="card">
                <div class="card-body">
                    @if (Model.Count() > 0)
                    {
                        @foreach (var item in Model)
                        {
                            <div class="row border-bottom py-3 d-flex align-items-center cart-item">
                                <div class="col-4 col-sm-3 col-md-2">
                                    @if (item.ProductVariantId != null && item.ProductVariant.ProductImages != null)
                                    {
                                        <partial name="_ProductVariantImageVideoPartialView" model="@item.ProductVariant" />
                                    }
                                    else
                                    {
                                        <partial name="_ProductImageVideoPartialView" model="@item.Product" />
                                    }
                                </div>
                                <div class="col-8 col-sm-5 col-md-6 product-details">
                                    <h5>
                                        <a href="/Home/Details/@item.ProductId?variantId=@item.ProductVariant.VariantId" class="text-decoration-none text-dark" target="_blank" rel="noopener noreferrer">
                                            @if (item.ProductVariantId != null && item.ProductVariant != null)
                                            {
                                                @item.ProductVariant.VarinatName
                                            }
                                            else
                                            {
                                                @item.Product.Name
                                            }
                                        </a>
                                    </h5>

                                    @if (item.ProductVariantId != null && !string.IsNullOrEmpty(item.SelectedAttributes))
                                    {
                                        <p class="badge bg-black">
                                            @{
                                                var selectedAttrs = JsonSerializer.Deserialize<Dictionary<string, string>>(item.SelectedAttributes);
                                                var formAttedAttrs = selectedAttrs.Select(a => $"{a.Key}: {a.Value}");
                                            }
                                            @string.Join(", ", formAttedAttrs)
                                        </p>
                                    }
                                    <p class="small"><a href="/Home/Details/@item.ProductId" class="text-decoration-none text-dark">@item.Product.ShortDescription</a></p>
                                    <h6 class="d-flex gap-3 align-items-center flex-wrap">
                                        @{
                                            var price = item.ProductVariantId != null ? item.ProductVariant.FinalSellingPrice : item.Product.CalculatedSellingPrice;
                                            var basePrice = item.ProductVariantId != null ? item.ProductVariant.BasePrice : item.Product.Price;
                                            var discountPercentage = item.ProductVariantId != null ? item.ProductVariant.DiscountPercentage : item.Product.SellingPricePercent;
                                        }
                                        <span class="text-black fw-bold">@price.ToString("C")</span>
                                        <span class="text-muted text-decoration-line-through">@basePrice.ToString("C")</span>
                                        <span class="fw-bold btn btn-warning btn-sm">
                                            @discountPercentage.ToString("0")% off
                                        </span>
                                    </h6>
                                    @{
                                        if (item.Product.DeliveryCharge > 0)
                                        {
                                            <p class="text-success small">Delivery in 2 days, @DateTime.Now.AddDays(2).ToString("ddd") | <span class="text-success fw-bold">@item.Product.DeliveryCharge.ToString("C")</span>  </p>
                                        }
                                        else
                                        {
                                            <p class="text-success small">Delivery in 2 days, @DateTime.Now.AddDays(2).ToString("ddd") | <strong>Free</strong> </p>
                                        }
                                    }
                                </div>
                                <div class="col-4 col-md-2 d-flex align-items-center justify-content-center">
                                    <div class="d-flex border rounded-3 overflow-hidden">
                                        <button class="btn btn-outline-secondary btn-sm decrement" type="button">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" data-cartid="@item.CartId" name="quantity" value="@item.Quantity" min="1"
                                        class="form-control quantity text-center border-0">
                                        <button class="btn btn-outline-secondary btn-sm increment " type="button">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>



                                <div class="col-8 col-md-2 text-end">
                                    @* <p class="fw-bold quantity-price">@((item.Quantity * item.Price).ToString("C"))</p>  *@
                                    <form asp-action="RemoveFromCart" method="post">
                                        <input type="hidden" name="cartId" value="@item.CartId" />
                                        <button type="submit" class="btn btn-outline-danger btn-sm">Remove</button>
                                    </form>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col">
                            <div class="alert alert-info text-center">
                                <h4>No Items Found</h4>
                                <p>You haven't added any items into cart yet.</p>
                                <a asp-action="Products" asp-controller="Home" class="btn btn-primary">Start Shopping</a>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card price-section">

                <div class="card-body">
                    <form asp-action="Checkout" method="get" asp-controller="Order">
                        <h5 class="fw-bold">Price Details</h5>
                        <hr />
                        @{
                            var totalBasePrice = Model.Sum(x => x.Quantity * (x.ProductVariantId != null ? x.ProductVariant.BasePrice : x.Product.Price));
                            var totalSellingPrice = Model.Sum(x => x.Quantity * (x.ProductVariantId != null ? x.ProductVariant.FinalSellingPrice : x.Product.CalculatedSellingPrice));
                            var totalDiscount = totalBasePrice - totalSellingPrice;
                            var highestDeliveryCharge = Model.Where(x => x.Product.DeliveryCharge > 0)
                            .Max(x => (decimal?)x.Product.DeliveryCharge) ?? 0;

                            var totalGST = Model.Sum(x => x.TotalGST);
                            var totalAmount = totalSellingPrice + totalGST + highestDeliveryCharge;
                         }
                        <p>Price (@Model.Count() Items): <span class="float-end">@totalBasePrice.ToString("C")</span></p>
                        <p>Discount: <span class="float-end text-success">- @totalDiscount.ToString("C")</span></p>
                        @{
                           if (@highestDeliveryCharge > 0)
                            {
                                <p>Delivery Charges: <span class="float-end text-success fw-bold">@highestDeliveryCharge.ToString("C")</span></p>
                            }
                            else
                            {
                                <p>Delivery Charges: <strong class="float-end text-success fw-bold">Free</strong> </p>
                            }
                        }
                        <hr />
                        <p class="fw-bold">
                            Before Tax:
                            <span class="float-end">
                                @((totalBasePrice - totalDiscount + @highestDeliveryCharge).ToString("C"))
                            </span>
                        </p>
                        <hr />
                        <p>CGST: <span class="float-end">@((totalGST /2).ToString("C"))</span></p>
                        <p>SGST: <span class="float-end">@((totalGST / 2).ToString("C"))</span></p>

                        <hr>
                        <h5 class="fw-bold">
                            Total Amount:
                            <span class="float-end">
                                @totalAmount.ToString("C")
                            </span>
                        </h5>

                        <p class="text-success">You will save @totalDiscount.ToString("C") on this order</p>
                        <button class="btn btn-warning w-100 mt-2">Place Order</button>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/quantityincrement.js"></script>
}
