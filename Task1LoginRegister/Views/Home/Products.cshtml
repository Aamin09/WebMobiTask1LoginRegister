@model Task1LoginRegister.DTOs.ProductListViewModel

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>

    .product-image {
        height: 250px;
        width: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .col-lg-3 {
        padding-left: 10px;
    }

    .form-select {
        font-size: 0.95rem;
    }

    .product-image:hover {
        transform: scale(1.1);
    }

    .product-card {
        display: flex;
        flex-direction: column;
        overflow: hidden;
        height: 100%;
        transition: border 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .product-card:hover {
            border: 2px solid #007bff;
            box-shadow: 0px 4px 12px rgba(0, 123, 255, 0.5);
        }


    /* Sticky sidebar */
    .filters-sidebar {
        position: -webkit-sticky;
        position: sticky;
        top: 20px;
        z-index: 10;
    }

    .view-options button {
        padding: 0.5rem 1rem;
        font-size: 1.2rem;
    }

    .view-option.active {
        background-color: #007bff;
        color: white;
    }

    .card-body {
        padding: 1.2rem;
        flex-grow: 1;
    }

    .text-muted {
        font-size: 1rem;
    }

    .justify-content-between {
        font-size: 1.1rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .main {
        max-width: 100%;
        padding-left: 30px;
        padding-right: 60px;
    }


    /* Media Queries for Small Devices */
    @@media (max-width: 480px) {

        .main {
            padding-left: 0;
            padding-right: 0;
        }

        .col-sm-6 {
            width: 50%;
            padding-left: 0;
            padding-right: 0;
        }

        .card-img-top {
            max-height: 200px;
        }

        .row-cols-md-2 {
            row-gap: 1.5rem;
        }

        .card {
            height: auto;
            margin-left: 0;
            margin-right: 0;
        }

        .card-body {
            padding-left: 10px;
            padding-right: 10px;
        }

        .card-title {
            font-size: 0.89rem;
        }

        .text-muted {
            font-size: 0.82rem;
        }


        .justify-content-between {
            font-size: 0.95rem;
        }


        .pagination .page-link {
            font-size: 0.7rem;
        }
    }

    /* Media Queries for Tablets */
    @@media (max-width: 768px) {
        .main {
            padding-left: 10px;
            padding-right: 10px;
        }

        .product-image {
            height: 350px;
            object-fit: cover;
        }

        .card {
            height: auto;
        }

        .pagination {
            font-size: 0.9rem;
        }
    }

    /* Media Queries for iPad Mini/Pro */
    @@media (max-width: 1024px) {
        .main {
            padding-left: 5px;
            padding-right: 5px;
        }

        .product-image {
            height: 320px;
            object-fit: cover;
        }

        .card {
            height: auto;
        }

        .pagination .page-link {
            font-size: 0.9rem;
        }
    }
</style>

<div class="container mt-5 main">
    <div class="row">
        <!-- Sidebar Filters -->
        <div class="col-md-3">
            <div class="filters-sidebar p-4 shadow-sm rounded bg-light position-sticky" style="top: 20px;">
                <h4>Filters</h4>
                <hr />
                <form method="get" id="filterForm">
                    <div class="filter-section mb-4">
                        <h6 class="filter-title">Search</h6>
                        <input type="text" name="searchProduct" id="searchProduct" class="form-control" placeholder="Search products..." value="@Model.SearchProductname">
                    </div>
                        <!-- Category Filter -->
                        <div class="filter-section mb-4">
                            <h6 class="filter-title">Categories</h6>
                            <select name="categoryId" id="catDropdown" class="form-select" onchange="this.form.submit()">
                                <option value="">All Categories</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.Value" selected="@(category.Value == Model.CategoryId?.ToString() ? "selected" : null)">
                                        @category.Text
                                    </option>
                                }
                            </select>
                        </div>

                        <input type="hidden" id="selectedSubcategoriesInput" name="subcategoryIds" value="@Model.SubcategoryIds" />

                        <div class="filter-section mb-4">
                            <h6 class="filter-title">Subcategories</h6>
                            @if (Model.CategoryId.HasValue)
                            {
                                var selectedIds = !string.IsNullOrEmpty(Model.SubcategoryIds)
                                ? Model.SubcategoryIds.Split(',').Select(id => int.Parse(id)).ToList()
                                : new List<int>();

                                @foreach (var subcategory in ViewBag.Subcategories)
                                {
                                    <div class="form-check">
                                        <input type="checkbox"
                                               class="form-check-input subcategory-checkbox"
                                               id="subcat-@subcategory.Value"
                                               value="@subcategory.Value"
                                        @(selectedIds.Contains(int.Parse(subcategory.Value.ToString())) ? "checked" : "")>
                                        <label class="form-check-label" for="subcat-@subcategory.Value">
                                            @subcategory.Text
                                        </label>
                                    </div>
                                }
                            }
                        </div>

                        <!-- Price Range Filter -->
                        <div class="filter-section mb-4">
                            <h6 class="filter-title">Price Range</h6>
                            <div class="d-flex gap-3">
                                <input type="number" name="minPrice" class="form-control" placeholder="Min" value="@Model.MinPrice">
                                <input type="number" name="maxPrice" class="form-control" placeholder="Max" value="@Model.MaxPrice">
                            </div>
                        </div>

                        <!-- Apply Filters Button -->
                        
                        <button type="submit" class="btn btn-primary w-100 mt-2">Apply Filters</button>
                </form>
            </div>
        </div>

        <!-- Products Listing -->
        <div class="col-md-9">
            <div class="d-flex flex-column flex-sm-row justify-content-between listing align-items-center mb-4">
                <h2 class="text-dark mb-3 mt-sm-2">Products</h2>
                <div class="d-flex flex-column flex-sm-row gap-2 gap-sm-3 justify-content-lg-start">
                    <form method="get" id="sortForm">
                        <div class="d-flex flex-column flex-sm-row gap-2 gap-sm-3 align-items-center">
                            <label class="form-label mb-0 text-dark"><strong>Sort By:</strong></label>
                            <select name="sortOrder" class="form-select w-auto" onchange="this.form.submit()">
                                @foreach (var option in ViewBag.SortOptions as List<SelectListItem>)
                                {
                                    <option value="@option.Value" selected="@(ViewBag.CurrentSort == option.Value ? "selected" : null)">
                                        @option.Text
                                    </option>
                                }
                            </select>
                        </div>
                        <!-- Hidden fields to maintain filter state -->
                        <input type="hidden" name="categoryId" value="@Model.CategoryId" />
                        <input type="hidden" name="searchProduct" value="@Model.SearchProductname" />
                        <input type="hidden" name="subcategoryIds" value="@Model.SubcategoryIds" />
                        <input type="hidden" name="minPrice" value="@Model.MinPrice" />
                        <input type="hidden" name="maxPrice" value="@Model.MaxPrice" />
                    </form>
                </div>
            </div>

            <!-- Product Grid -->
            <div class="row">
                @foreach (var product in Model.Products)
                {
                    <partial name="_ProductPartialView" model="product" view-data='new ViewDataDictionary(ViewData) { { "ColumnClass", "col-lg-4 col-md-6 col-sm-6" } }' />

                }
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="mt-5">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&categoryId=@Model.CategoryId&subcategoryId=@Model.SubcategoryIds&minPrice=@Model.MinPrice&maxPrice=@Model.MaxPrice&sortOrder=@ViewBag.CurrentSort&searchProduct=@Model.SearchProductname">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
         $(document).ready(function () {
            const $form = $('#filterForm');
            const $subcategoriesInput = $('#selectedSubcategoriesInput');

            $('.subcategory-checkbox').on('change', function () {
                let selectedSubcategories = [];

                // Getting all checked subcategories
                $('.subcategory-checkbox:checked').each(function () {
                    selectedSubcategories.push($(this).val());
                });

                // Updating hidden input value
                $subcategoriesInput.val(selectedSubcategories.join(','));
                $form.submit();
            });

            // category dropdown value change
            $('#catDropdown').on('change', function () {
                // Clearing subcategory selections when category changes
                $subcategoriesInput.val('');
                $form.submit();
            });
        });
    </script>
}
