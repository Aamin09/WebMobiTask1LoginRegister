@model Product

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>


    .star-rating input[type="radio"] {
        display: none; /* Hide actual radio buttons */
    }

    .star-label {
        cursor: pointer;
        padding: 0 0.15rem;
        transition: all 0.2s;
    }

        .star-label:hover,
        .star-label:hover ~ .star-label,
        .star-rating input[type="radio"]:checked ~ .star-label {
            color: #28a745; /* Bootstrap success color */
        }

    .star-rating input[type="radio"]:checked + .star-label {
        transform: scale(1.2);
    }

        .star-rating input[type="radio"]:checked + .star-label i,
        .star-label:hover i,
        .star-label:hover ~ .star-label i {
            font-weight: 900; /* Solid star */
        }
</style>

<div class="container-fluid my-4">
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible">
                @TempData["ErrorMessage"]
            </div>
        }

        <div id="reviewDisplaySection">
            <div class="row">
                <div class="col-12">
                    <h3 class="mb-4">Reviews & Ratings</h3>
                    <hr />
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="fs-5">@Model.ReviewCount Reviews</span>
                        <div class="fs-5">
                            @{
                                var avgRating = Math.Round(Model.AverageRating, 1);
                                int fullStars = (int)avgRating;
                                bool hasHalfStar = avgRating - fullStars >= 0.5;
                                int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                            }
                            @Html.Raw(string.Join("", Enumerable.Range(0, fullStars).Select(i => "<i class=\"fas fa-star text-success\"></i>")))
                            @if (hasHalfStar)
                            {
                                @Html.Raw("<i class=\"fas fa-star-half-alt text-success\"></i>")
                            }
                            @Html.Raw(string.Join("", Enumerable.Range(0, emptyStars).Select(i => "<i class=\"far fa-star text-success\"></i>")))
                            @avgRating/5
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body" style="height:250px;">
                            @for (int i = 5; i >= 1; i--)
                            {
                                var countforRating = Model.Reviews.Count(r => r.IsApproved && r.Rating == i);
                                <div class="d-flex mb-4">
                                    <div class="text-success me-2">@i<i class="fas fa-star"></i></div>
                                    <div class="progress flex-grow-1 mt-1">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: @countforRating%" aria-valuenow="@countforRating"
                                             aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                    </div>
                                    <div class="ms-2">@countforRating</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>


                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h4 id="writeReview">Write a Review</h4>
                            <hr />
                            <form asp-action="AddReview" asp-controller="Review" method="post" class="mt-3" id="reviewForm">
                                <input type="hidden" name="productId" value="@Model.ProductId" />
                                <div class="mb-3">
                                    <label class="form-label">Rating</label>
                                    <div class="d-flex align-items-center">
                                        <div class="star-rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <input type="radio" id="star-@i" name="Rating" value="@i"
                                                @(TempData["SavedRating"] != null && (int)TempData["SavedRating"] == i ? "checked" : "") />
                                                <label for="star-@i" class="star-label">
                                                    <i class="@(TempData["SavedRating"] != null && (int)TempData["SavedRating"] >= i ? "fas" : "far") fa-star text-success fs-3"></i>
                                                </label>
                                            }
                                        </div>
                                    </div>
                                    <div id="ratingError" class="text-danger" style="display:none;">
                                        Please select a rating
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="reviewDescription" class="form-label">Description</label>
                                    <textarea class="form-control border border-success" id="reviewDescription" name="Description" rows="4" required>@TempData["SavedDescription"]</textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Submit Review</button>

                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="reviews mt-4">
                @{
                    // Pagination variables
                    int pageSize = 5;
                    int currentPage = Convert.ToInt32(Context.Request.Query["page"]) > 0
                    ? Convert.ToInt32(Context.Request.Query["page"])
                    : 1;
                    var approvedReviews = Model.Reviews.Where(r => r.IsApproved).OrderByDescending(r => r.CreatedDate);
                    int totalItems = approvedReviews.Count();
                    int totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);
                    var pagedReviews = approvedReviews.Skip((currentPage - 1) * pageSize).Take(pageSize);
                }

                @foreach (var review in pagedReviews)
                {
                    <div class="review-item mb-4 pb-3 border-bottom">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <img src="~/images/@review.User.Photo" alt="@review.User.FirstName" class="rounded-circle me-3"
                                     style="width: 60px; height: 60px; object-fit: cover;">
                                <div>
                                    <h5 class="mb-0">@review.User.FirstName @review.User.LastName</h5>
                                    <div class="mt-1">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= review.Rating ? "fas" : "far") fa-star text-success"></i>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="text-muted">@review.CreatedDate.ToString("MMM d, yyyy")</div>
                        </div>
                        <p class="mt-3">@review.Description</p>
                    </div>
                }

                @if (totalPages > 1)
                {
                    <nav aria-label="Reviews pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="?page=@(currentPage-1)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>

                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="?page=@i">@i</a>
                                </li>
                            }

                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" href="?page=@(currentPage+1)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

